{
  "address": "0x509CE56Ea7e4474D5c7F6D00095fB33219308Ea3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_enabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "communityAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "communityPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "holder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liqudityAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liqudityPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketingPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_communityAddress",
          "type": "address"
        }
      ],
      "name": "setCommunityAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_communityPercent",
          "type": "uint256"
        }
      ],
      "name": "setCommunityPercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liqudityAddress",
          "type": "address"
        }
      ],
      "name": "setLiqudityAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_liqudityPercent",
          "type": "uint256"
        }
      ],
      "name": "setLiqudityPercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_marketingAddress",
          "type": "address"
        }
      ],
      "name": "setMarketingAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketingPercent",
          "type": "uint256"
        }
      ],
      "name": "setMarketingPercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingContract",
          "type": "address"
        }
      ],
      "name": "setStakingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9313cadeb96841a6744de13307f27229a5476fc2e20d6efdc8753054e75e7222",
  "receipt": {
    "to": null,
    "from": "0xf5aF44B2e01445cD2093CE254CD95b80354fCC97",
    "contractAddress": "0x509CE56Ea7e4474D5c7F6D00095fB33219308Ea3",
    "transactionIndex": 19,
    "gasUsed": "1713393",
    "logsBloom": "0x
    "blockHash": "0xf14b6e023eeb03ccdf1dcf8297277450ef6adf2f645493d20a3c94c23b813482",
    "transactionHash": "0x9313cadeb96841a6744de13307f27229a5476fc2e20d6efdc8753054e75e7222",
    "logs": [
      {
        "transactionIndex": 19,
        "blockNumber": 10420036,
        "transactionHash": "0x9313cadeb96841a6744de13307f27229a5476fc2e20d6efdc8753054e75e7222",
        "address": "0x509CE56Ea7e4474D5c7F6D00095fB33219308Ea3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f5af44b2e01445cd2093ce254cd95b80354fcc97"
        ],
        "data": "0x",
        "logIndex": 26,
        "blockHash": "0xf14b6e023eeb03ccdf1dcf8297277450ef6adf2f645493d20a3c94c23b813482"
      }
    ],
    "blockNumber": 10420036,
    "cumulativeGasUsed": "11876282",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "e2316266c102775d1f88badb33aebd30",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"holder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liqudityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liqudityPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_communityAddress\",\"type\":\"address\"}],\"name\":\"setCommunityAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_communityPercent\",\"type\":\"uint256\"}],\"name\":\"setCommunityPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liqudityAddress\",\"type\":\"address\"}],\"name\":\"setLiqudityAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liqudityPercent\",\"type\":\"uint256\"}],\"name\":\"setLiqudityPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketingAddress\",\"type\":\"address\"}],\"name\":\"setMarketingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketingPercent\",\"type\":\"uint256\"}],\"name\":\"setMarketingPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"}],\"name\":\"setStakingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Egg.sol\":\"Egg\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = _allowances[owner][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Egg.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.7.0 <0.9.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\r\\n\\r\\ncontract Egg is ERC20, Ownable, Pausable {\\r\\n\\r\\n    bool public _enabled = false; \\r\\n    address public stakingContract;\\r\\n\\r\\n    address public marketingAddress;\\r\\n    address public communityAddress;\\r\\n    address public liqudityAddress;\\r\\n    uint256 public tokenAmount = 0;\\r\\n\\r\\n    uint public marketingPercent = 2;\\r\\n    uint public communityPercent = 1;\\r\\n    uint public liqudityPercent = 2;\\r\\n\\r\\n\\r\\n    mapping(address => uint256) public holder;\\r\\n    \\r\\n\\r\\n    constructor() ERC20(\\\"Egg\\\", \\\"EGG\\\") {\\r\\n        // _mint(msg.sender, 10076 * (10 ** 18));\\r\\n        marketingAddress = 0xCB6fe3235443b7Cd4EF4420165ceCBa94925EFF6;\\r\\n        communityAddress = 0x20C86CCb82AaF796041dc06aEF706cEF8e536100;\\r\\n        liqudityAddress  = address(this);\\r\\n    }\\r\\n\\r\\n    function disable() public onlyOwner {\\r\\n        _pause();\\r\\n    }\\r\\n    function enable() public onlyOwner {\\r\\n        _unpause();\\r\\n    }\\r\\n\\r\\n    function setMarketingAddress(address _marketingAddress) public onlyOwner {\\r\\n        marketingAddress = _marketingAddress;\\r\\n    }\\r\\n\\r\\n    function setCommunityAddress(address _communityAddress) public onlyOwner {\\r\\n        communityAddress = _communityAddress;\\r\\n    }\\r\\n\\r\\n    function setLiqudityAddress(address _liqudityAddress) public onlyOwner {\\r\\n        liqudityAddress = _liqudityAddress;\\r\\n    }\\r\\n\\r\\n\\r\\n    function setMarketingPercent(uint _marketingPercent) public onlyOwner {\\r\\n        marketingPercent = _marketingPercent;\\r\\n    }\\r\\n\\r\\n    function setCommunityPercent(uint _communityPercent) public onlyOwner {\\r\\n        communityPercent = _communityPercent;\\r\\n    }\\r\\n\\r\\n    function setLiqudityPercent(uint _liqudityPercent) public onlyOwner {\\r\\n        liqudityPercent = _liqudityPercent;\\r\\n    }\\r\\n\\r\\n\\r\\n    function setStakingContract(address _stakingContract) public onlyOwner {\\r\\n       stakingContract = _stakingContract;\\r\\n    }\\r\\n    \\r\\n    function burn(address account, uint256 amount) public virtual onlyOwner returns (bool){\\r\\n        _burn(account,amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function mint(address sender, uint256 amount) external {\\r\\n        require(msg.sender == owner() || msg.sender == stakingContract, \\\"Bad request\\\");\\r\\n        _mint(sender, amount * (10 ** 18));\\r\\n        tokenAmount += amount;\\r\\n        holder[sender] += amount;\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\r\\n        _transfer(msg.sender, liqudityAddress,      (amount * liqudityPercent) / 100);\\r\\n        _transfer(msg.sender, marketingAddress,     (amount * marketingPercent) / 100);\\r\\n        _transfer(msg.sender, communityAddress,     (amount * communityPercent) / 100);\\r\\n        _transfer(msg.sender, recipient, (amount * (100 - liqudityPercent - marketingPercent - communityPercent)) / 100 );\\r\\n\\r\\n        holder[liqudityAddress]   += (amount * liqudityPercent) / 100;\\r\\n        holder[marketingAddress] +=  (amount * marketingPercent) / 100;\\r\\n        holder[communityAddress] +=  (amount * communityPercent) / 100;\\r\\n        holder[recipient]       +=   (amount * (100 - liqudityPercent - marketingPercent - communityPercent)) / 100;\\r\\n        \\r\\n        holder[msg.sender] -=  amount;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override  returns (bool){\\r\\n        _transfer(sender, liqudityAddress,      (amount * liqudityPercent) / 100);\\r\\n        _transfer(sender, marketingAddress,     (amount * marketingPercent) / 100);\\r\\n        _transfer(sender, communityAddress,     (amount * communityPercent) / 100);\\r\\n        _transfer(sender, recipient,            (amount * (100 - liqudityPercent - marketingPercent - communityPercent)) / 100 );\\r\\n        \\r\\n        holder[liqudityAddress]   +=(amount * liqudityPercent) / 100;\\r\\n        holder[marketingAddress] += (amount * marketingPercent) / 100;\\r\\n        holder[communityAddress] += (amount * communityPercent) / 100;\\r\\n        holder[recipient]       +=  (amount * (100 - liqudityPercent - marketingPercent - communityPercent)) / 100 ;\\r\\n        \\r\\n        holder[sender] -=  amount;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function withdraw() public payable onlyOwner {\\r\\n        (bool os, ) = payable(owner()).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(os);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xc11ed36d93b5d09d4c32809ffbc339cb98176a224aedc60686ec5d55c6628b14\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526005805460ff60a81b191690556000600a556002600b8190556001600c55600d553480156200003257600080fd5b5060408051808201825260038082526245676760e81b602080840191825284518086019095528285526245474760e81b9085015282519293926200007892919062000166565b5080516200008e90600490602084019062000166565b505050620000ab620000a56200011060201b60201c565b62000114565b6005805460ff60a01b19169055600780546001600160a01b031990811673cb6fe3235443b7cd4ef4420165cecba94925eff6179091556008805482167320c86ccb82aaf796041dc06aef706cef8e536100179055600980549091163017905562000249565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000174906200020c565b90600052602060002090601f016020900481019282620001985760008555620001e3565b82601f10620001b357805160ff1916838001178555620001e3565b82800160010185558215620001e3579182015b82811115620001e3578251825591602001919060010190620001c6565b50620001f1929150620001f5565b5090565b5b80821115620001f15760008155600101620001f6565b600181811c908216806200022157607f821691505b602082108114156200024357634e487b7160e01b600052602260045260246000fd5b50919050565b611a2b80620002596000396000f3fe6080604052600436106102195760003560e01c8063906e9dd011610123578063c36be496116100ab578063e91a04841161006f578063e91a048414610633578063ee99205c14610653578063eec7faa114610673578063f2fde38b14610689578063f7ce4479146106a957600080fd5b8063c36be49614610576578063c6055ec314610597578063d8020a18146105b7578063dc8ab6b8146105cd578063dd62ed3e146105ed57600080fd5b8063a3907d71116100f2578063a3907d71146104e1578063a457c2d7146104f6578063a4a92ad614610516578063a5ece94114610536578063a9059cbb1461055657600080fd5b8063906e9dd01461046c57806395d89b411461048c5780639dc29fac146104a15780639dd373b9146104c157600080fd5b80633ccfd60b116101a657806370a082311161017557806370a08231146103b5578063715018a6146103eb578063844284d71461040057806386e476dd146104165780638da5cb5b1461044e57600080fd5b80633ccfd60b1461035857806340c10f1914610360578063506e0f08146103805780635c975abb1461039657600080fd5b80631eb7caba116101ed5780631eb7caba146102ba57806323b872dd146102e75780632f2770db14610307578063313ce5671461031c578063395093511461033857600080fd5b80623013cb1461021e57806306fdde0314610240578063095ea7b31461026b57806318160ddd1461029b575b600080fd5b34801561022a57600080fd5b5061023e6102393660046117df565b6106c9565b005b34801561024c57600080fd5b5061025561071e565b60405161026291906118ae565b60405180910390f35b34801561027757600080fd5b5061028b61028636600461186d565b6107b0565b6040519015158152602001610262565b3480156102a757600080fd5b506002545b604051908152602001610262565b3480156102c657600080fd5b506102ac6102d53660046117df565b600e6020526000908152604090205481565b3480156102f357600080fd5b5061028b610302366004611832565b6107c8565b34801561031357600080fd5b5061023e610a01565b34801561032857600080fd5b5060405160128152602001610262565b34801561034457600080fd5b5061028b61035336600461186d565b610a35565b61023e610a74565b34801561036c57600080fd5b5061023e61037b36600461186d565b610b12565b34801561038c57600080fd5b506102ac600d5481565b3480156103a257600080fd5b50600554600160a01b900460ff1661028b565b3480156103c157600080fd5b506102ac6103d03660046117df565b6001600160a01b031660009081526020819052604090205490565b3480156103f757600080fd5b5061023e610bd2565b34801561040c57600080fd5b506102ac600c5481565b34801561042257600080fd5b50600854610436906001600160a01b031681565b6040516001600160a01b039091168152602001610262565b34801561045a57600080fd5b506005546001600160a01b0316610436565b34801561047857600080fd5b5061023e6104873660046117df565b610c06565b34801561049857600080fd5b50610255610c52565b3480156104ad57600080fd5b5061028b6104bc36600461186d565b610c61565b3480156104cd57600080fd5b5061023e6104dc3660046117df565b610ca1565b3480156104ed57600080fd5b5061023e610ced565b34801561050257600080fd5b5061028b61051136600461186d565b610d1f565b34801561052257600080fd5b5061023e610531366004611896565b610dbc565b34801561054257600080fd5b50600754610436906001600160a01b031681565b34801561056257600080fd5b5061028b61057136600461186d565b610deb565b34801561058257600080fd5b5060055461028b90600160a81b900460ff1681565b3480156105a357600080fd5b5061023e6105b2366004611896565b610fed565b3480156105c357600080fd5b506102ac600b5481565b3480156105d957600080fd5b5061023e6105e8366004611896565b61101c565b3480156105f957600080fd5b506102ac610608366004611800565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561063f57600080fd5b50600954610436906001600160a01b031681565b34801561065f57600080fd5b50600654610436906001600160a01b031681565b34801561067f57600080fd5b506102ac600a5481565b34801561069557600080fd5b5061023e6106a43660046117df565b61104b565b3480156106b557600080fd5b5061023e6106c43660046117df565b6110e3565b6005546001600160a01b031633146106fc5760405162461bcd60e51b81526004016106f390611901565b60405180910390fd5b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60606003805461072d906119a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610759906119a4565b80156107a65780601f1061077b576101008083540402835291602001916107a6565b820191906000526020600020905b81548152906001019060200180831161078957829003601f168201915b5050505050905090565b6000336107be81858561112f565b5060019392505050565b600954600d546000916107fd9186916001600160a01b0316906064906107ee908761196e565b6107f8919061194e565b611254565b600754600b546108229186916001600160a01b03909116906064906107ee908761196e565b600854600c546108479186916001600160a01b03909116906064906107ee908761196e565b61088184846064600c54600b54600d546064610863919061198d565b61086d919061198d565b610877919061198d565b6107ee908761196e565b6064600d5483610891919061196e565b61089b919061194e565b6009546001600160a01b03166000908152600e6020526040812080549091906108c5908490611936565b9091555050600b546064906108da908461196e565b6108e4919061194e565b6007546001600160a01b03166000908152600e60205260408120805490919061090e908490611936565b9091555050600c54606490610923908461196e565b61092d919061194e565b6008546001600160a01b03166000908152600e602052604081208054909190610957908490611936565b925050819055506064600c54600b54600d546064610975919061198d565b61097f919061198d565b610989919061198d565b610993908461196e565b61099d919061194e565b6001600160a01b0384166000908152600e6020526040812080549091906109c5908490611936565b90915550506001600160a01b0384166000908152600e6020526040812080548492906109f290849061198d565b90915550600195945050505050565b6005546001600160a01b03163314610a2b5760405162461bcd60e51b81526004016106f390611901565b610a33611423565b565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906107be9082908690610a6f908790611936565b61112f565b6005546001600160a01b03163314610a9e5760405162461bcd60e51b81526004016106f390611901565b6000610ab26005546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610afc576040519150601f19603f3d011682016040523d82523d6000602084013e610b01565b606091505b5050905080610b0f57600080fd5b50565b6005546001600160a01b0316331480610b3557506006546001600160a01b031633145b610b6f5760405162461bcd60e51b815260206004820152600b60248201526a109859081c995c5d595cdd60aa1b60448201526064016106f3565b610b8a82610b8583670de0b6b3a764000061196e565b6114c8565b80600a6000828254610b9c9190611936565b90915550506001600160a01b0382166000908152600e602052604081208054839290610bc9908490611936565b90915550505050565b6005546001600160a01b03163314610bfc5760405162461bcd60e51b81526004016106f390611901565b610a3360006115a7565b6005546001600160a01b03163314610c305760405162461bcd60e51b81526004016106f390611901565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b60606004805461072d906119a4565b6005546000906001600160a01b03163314610c8e5760405162461bcd60e51b81526004016106f390611901565b610c9883836115f9565b50600192915050565b6005546001600160a01b03163314610ccb5760405162461bcd60e51b81526004016106f390611901565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b03163314610d175760405162461bcd60e51b81526004016106f390611901565b610a3361173f565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610da45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106f3565b610db1828686840361112f565b506001949350505050565b6005546001600160a01b03163314610de65760405162461bcd60e51b81526004016106f390611901565b600d55565b600954600d54600091610e119133916001600160a01b0316906064906107ee908761196e565b600754600b54610e369133916001600160a01b03909116906064906107ee908761196e565b600854600c54610e5b9133916001600160a01b03909116906064906107ee908761196e565b610e7733846064600c54600b54600d546064610863919061198d565b6064600d5483610e87919061196e565b610e91919061194e565b6009546001600160a01b03166000908152600e602052604081208054909190610ebb908490611936565b9091555050600b54606490610ed0908461196e565b610eda919061194e565b6007546001600160a01b03166000908152600e602052604081208054909190610f04908490611936565b9091555050600c54606490610f19908461196e565b610f23919061194e565b6008546001600160a01b03166000908152600e602052604081208054909190610f4d908490611936565b925050819055506064600c54600b54600d546064610f6b919061198d565b610f75919061198d565b610f7f919061198d565b610f89908461196e565b610f93919061194e565b6001600160a01b0384166000908152600e602052604081208054909190610fbb908490611936565b9091555050336000908152600e602052604081208054849290610fdf90849061198d565b909155506001949350505050565b6005546001600160a01b031633146110175760405162461bcd60e51b81526004016106f390611901565b600b55565b6005546001600160a01b031633146110465760405162461bcd60e51b81526004016106f390611901565b600c55565b6005546001600160a01b031633146110755760405162461bcd60e51b81526004016106f390611901565b6001600160a01b0381166110da5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f3565b610b0f816115a7565b6005546001600160a01b0316331461110d5760405162461bcd60e51b81526004016106f390611901565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166111915760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f3565b6001600160a01b0382166111f25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166112b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f3565b6001600160a01b03821661131a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f3565b6001600160a01b038316600090815260208190526040902054818110156113925760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106f3565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906113c9908490611936565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161141591815260200190565b60405180910390a350505050565b600554600160a01b900460ff16156114705760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106f3565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114ab3390565b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661151e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106f3565b80600260008282546115309190611936565b90915550506001600160a01b0382166000908152602081905260408120805483929061155d908490611936565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166116595760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106f3565b6001600160a01b038216600090815260208190526040902054818110156116cd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106f3565b6001600160a01b03831660009081526020819052604081208383039055600280548492906116fc90849061198d565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611247565b600554600160a01b900460ff1661178f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106f3565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336114ab565b80356001600160a01b03811681146117da57600080fd5b919050565b6000602082840312156117f0578081fd5b6117f9826117c3565b9392505050565b60008060408385031215611812578081fd5b61181b836117c3565b9150611829602084016117c3565b90509250929050565b600080600060608486031215611846578081fd5b61184f846117c3565b925061185d602085016117c3565b9150604084013590509250925092565b6000806040838503121561187f578182fd5b611888836117c3565b946020939093013593505050565b6000602082840312156118a7578081fd5b5035919050565b6000602080835283518082850152825b818110156118da578581018301518582016040015282016118be565b818111156118eb5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611949576119496119df565b500190565b60008261196957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611988576119886119df565b500290565b60008282101561199f5761199f6119df565b500390565b600181811c908216806119b857607f821691505b602082108114156119d957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220aa33ed4e7e153f59434d9a2767f82026c7a45bbae962de6afcdd00dd1adc797864736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106102195760003560e01c8063906e9dd011610123578063c36be496116100ab578063e91a04841161006f578063e91a048414610633578063ee99205c14610653578063eec7faa114610673578063f2fde38b14610689578063f7ce4479146106a957600080fd5b8063c36be49614610576578063c6055ec314610597578063d8020a18146105b7578063dc8ab6b8146105cd578063dd62ed3e146105ed57600080fd5b8063a3907d71116100f2578063a3907d71146104e1578063a457c2d7146104f6578063a4a92ad614610516578063a5ece94114610536578063a9059cbb1461055657600080fd5b8063906e9dd01461046c57806395d89b411461048c5780639dc29fac146104a15780639dd373b9146104c157600080fd5b80633ccfd60b116101a657806370a082311161017557806370a08231146103b5578063715018a6146103eb578063844284d71461040057806386e476dd146104165780638da5cb5b1461044e57600080fd5b80633ccfd60b1461035857806340c10f1914610360578063506e0f08146103805780635c975abb1461039657600080fd5b80631eb7caba116101ed5780631eb7caba146102ba57806323b872dd146102e75780632f2770db14610307578063313ce5671461031c578063395093511461033857600080fd5b80623013cb1461021e57806306fdde0314610240578063095ea7b31461026b57806318160ddd1461029b575b600080fd5b34801561022a57600080fd5b5061023e6102393660046117df565b6106c9565b005b34801561024c57600080fd5b5061025561071e565b60405161026291906118ae565b60405180910390f35b34801561027757600080fd5b5061028b61028636600461186d565b6107b0565b6040519015158152602001610262565b3480156102a757600080fd5b506002545b604051908152602001610262565b3480156102c657600080fd5b506102ac6102d53660046117df565b600e6020526000908152604090205481565b3480156102f357600080fd5b5061028b610302366004611832565b6107c8565b34801561031357600080fd5b5061023e610a01565b34801561032857600080fd5b5060405160128152602001610262565b34801561034457600080fd5b5061028b61035336600461186d565b610a35565b61023e610a74565b34801561036c57600080fd5b5061023e61037b36600461186d565b610b12565b34801561038c57600080fd5b506102ac600d5481565b3480156103a257600080fd5b50600554600160a01b900460ff1661028b565b3480156103c157600080fd5b506102ac6103d03660046117df565b6001600160a01b031660009081526020819052604090205490565b3480156103f757600080fd5b5061023e610bd2565b34801561040c57600080fd5b506102ac600c5481565b34801561042257600080fd5b50600854610436906001600160a01b031681565b6040516001600160a01b039091168152602001610262565b34801561045a57600080fd5b506005546001600160a01b0316610436565b34801561047857600080fd5b5061023e6104873660046117df565b610c06565b34801561049857600080fd5b50610255610c52565b3480156104ad57600080fd5b5061028b6104bc36600461186d565b610c61565b3480156104cd57600080fd5b5061023e6104dc3660046117df565b610ca1565b3480156104ed57600080fd5b5061023e610ced565b34801561050257600080fd5b5061028b61051136600461186d565b610d1f565b34801561052257600080fd5b5061023e610531366004611896565b610dbc565b34801561054257600080fd5b50600754610436906001600160a01b031681565b34801561056257600080fd5b5061028b61057136600461186d565b610deb565b34801561058257600080fd5b5060055461028b90600160a81b900460ff1681565b3480156105a357600080fd5b5061023e6105b2366004611896565b610fed565b3480156105c357600080fd5b506102ac600b5481565b3480156105d957600080fd5b5061023e6105e8366004611896565b61101c565b3480156105f957600080fd5b506102ac610608366004611800565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561063f57600080fd5b50600954610436906001600160a01b031681565b34801561065f57600080fd5b50600654610436906001600160a01b031681565b34801561067f57600080fd5b506102ac600a5481565b34801561069557600080fd5b5061023e6106a43660046117df565b61104b565b3480156106b557600080fd5b5061023e6106c43660046117df565b6110e3565b6005546001600160a01b031633146106fc5760405162461bcd60e51b81526004016106f390611901565b60405180910390fd5b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60606003805461072d906119a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610759906119a4565b80156107a65780601f1061077b576101008083540402835291602001916107a6565b820191906000526020600020905b81548152906001019060200180831161078957829003601f168201915b5050505050905090565b6000336107be81858561112f565b5060019392505050565b600954600d546000916107fd9186916001600160a01b0316906064906107ee908761196e565b6107f8919061194e565b611254565b600754600b546108229186916001600160a01b03909116906064906107ee908761196e565b600854600c546108479186916001600160a01b03909116906064906107ee908761196e565b61088184846064600c54600b54600d546064610863919061198d565b61086d919061198d565b610877919061198d565b6107ee908761196e565b6064600d5483610891919061196e565b61089b919061194e565b6009546001600160a01b03166000908152600e6020526040812080549091906108c5908490611936565b9091555050600b546064906108da908461196e565b6108e4919061194e565b6007546001600160a01b03166000908152600e60205260408120805490919061090e908490611936565b9091555050600c54606490610923908461196e565b61092d919061194e565b6008546001600160a01b03166000908152600e602052604081208054909190610957908490611936565b925050819055506064600c54600b54600d546064610975919061198d565b61097f919061198d565b610989919061198d565b610993908461196e565b61099d919061194e565b6001600160a01b0384166000908152600e6020526040812080549091906109c5908490611936565b90915550506001600160a01b0384166000908152600e6020526040812080548492906109f290849061198d565b90915550600195945050505050565b6005546001600160a01b03163314610a2b5760405162461bcd60e51b81526004016106f390611901565b610a33611423565b565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906107be9082908690610a6f908790611936565b61112f565b6005546001600160a01b03163314610a9e5760405162461bcd60e51b81526004016106f390611901565b6000610ab26005546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610afc576040519150601f19603f3d011682016040523d82523d6000602084013e610b01565b606091505b5050905080610b0f57600080fd5b50565b6005546001600160a01b0316331480610b3557506006546001600160a01b031633145b610b6f5760405162461bcd60e51b815260206004820152600b60248201526a109859081c995c5d595cdd60aa1b60448201526064016106f3565b610b8a82610b8583670de0b6b3a764000061196e565b6114c8565b80600a6000828254610b9c9190611936565b90915550506001600160a01b0382166000908152600e602052604081208054839290610bc9908490611936565b90915550505050565b6005546001600160a01b03163314610bfc5760405162461bcd60e51b81526004016106f390611901565b610a3360006115a7565b6005546001600160a01b03163314610c305760405162461bcd60e51b81526004016106f390611901565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b60606004805461072d906119a4565b6005546000906001600160a01b03163314610c8e5760405162461bcd60e51b81526004016106f390611901565b610c9883836115f9565b50600192915050565b6005546001600160a01b03163314610ccb5760405162461bcd60e51b81526004016106f390611901565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b03163314610d175760405162461bcd60e51b81526004016106f390611901565b610a3361173f565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610da45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106f3565b610db1828686840361112f565b506001949350505050565b6005546001600160a01b03163314610de65760405162461bcd60e51b81526004016106f390611901565b600d55565b600954600d54600091610e119133916001600160a01b0316906064906107ee908761196e565b600754600b54610e369133916001600160a01b03909116906064906107ee908761196e565b600854600c54610e5b9133916001600160a01b03909116906064906107ee908761196e565b610e7733846064600c54600b54600d546064610863919061198d565b6064600d5483610e87919061196e565b610e91919061194e565b6009546001600160a01b03166000908152600e602052604081208054909190610ebb908490611936565b9091555050600b54606490610ed0908461196e565b610eda919061194e565b6007546001600160a01b03166000908152600e602052604081208054909190610f04908490611936565b9091555050600c54606490610f19908461196e565b610f23919061194e565b6008546001600160a01b03166000908152600e602052604081208054909190610f4d908490611936565b925050819055506064600c54600b54600d546064610f6b919061198d565b610f75919061198d565b610f7f919061198d565b610f89908461196e565b610f93919061194e565b6001600160a01b0384166000908152600e602052604081208054909190610fbb908490611936565b9091555050336000908152600e602052604081208054849290610fdf90849061198d565b909155506001949350505050565b6005546001600160a01b031633146110175760405162461bcd60e51b81526004016106f390611901565b600b55565b6005546001600160a01b031633146110465760405162461bcd60e51b81526004016106f390611901565b600c55565b6005546001600160a01b031633146110755760405162461bcd60e51b81526004016106f390611901565b6001600160a01b0381166110da5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f3565b610b0f816115a7565b6005546001600160a01b0316331461110d5760405162461bcd60e51b81526004016106f390611901565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166111915760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f3565b6001600160a01b0382166111f25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166112b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f3565b6001600160a01b03821661131a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f3565b6001600160a01b038316600090815260208190526040902054818110156113925760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106f3565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906113c9908490611936565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161141591815260200190565b60405180910390a350505050565b600554600160a01b900460ff16156114705760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106f3565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114ab3390565b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661151e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106f3565b80600260008282546115309190611936565b90915550506001600160a01b0382166000908152602081905260408120805483929061155d908490611936565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166116595760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106f3565b6001600160a01b038216600090815260208190526040902054818110156116cd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106f3565b6001600160a01b03831660009081526020819052604081208383039055600280548492906116fc90849061198d565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611247565b600554600160a01b900460ff1661178f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106f3565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336114ab565b80356001600160a01b03811681146117da57600080fd5b919050565b6000602082840312156117f0578081fd5b6117f9826117c3565b9392505050565b60008060408385031215611812578081fd5b61181b836117c3565b9150611829602084016117c3565b90509250929050565b600080600060608486031215611846578081fd5b61184f846117c3565b925061185d602085016117c3565b9150604084013590509250925092565b6000806040838503121561187f578182fd5b611888836117c3565b946020939093013593505050565b6000602082840312156118a7578081fd5b5035919050565b6000602080835283518082850152825b818110156118da578581018301518582016040015282016118be565b818111156118eb5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611949576119496119df565b500190565b60008261196957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611988576119886119df565b500290565b60008282101561199f5761199f6119df565b500390565b600181811c908216806119b857607f821691505b602082108114156119d957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220aa33ed4e7e153f59434d9a2767f82026c7a45bbae962de6afcdd00dd1adc797864736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 212,
        "contract": "contracts/Egg.sol:Egg",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 218,
        "contract": "contracts/Egg.sol:Egg",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 220,
        "contract": "contracts/Egg.sol:Egg",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 222,
        "contract": "contracts/Egg.sol:Egg",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 224,
        "contract": "contracts/Egg.sol:Egg",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 7,
        "contract": "contracts/Egg.sol:Egg",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/Egg.sol:Egg",
        "label": "_paused",
        "offset": 20,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 4817,
        "contract": "contracts/Egg.sol:Egg",
        "label": "_enabled",
        "offset": 21,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 4819,
        "contract": "contracts/Egg.sol:Egg",
        "label": "stakingContract",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 4821,
        "contract": "contracts/Egg.sol:Egg",
        "label": "marketingAddress",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 4823,
        "contract": "contracts/Egg.sol:Egg",
        "label": "communityAddress",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 4825,
        "contract": "contracts/Egg.sol:Egg",
        "label": "liqudityAddress",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 4828,
        "contract": "contracts/Egg.sol:Egg",
        "label": "tokenAmount",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 4831,
        "contract": "contracts/Egg.sol:Egg",
        "label": "marketingPercent",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 4834,
        "contract": "contracts/Egg.sol:Egg",
        "label": "communityPercent",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 4837,
        "contract": "contracts/Egg.sol:Egg",
        "label": "liqudityPercent",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 4841,
        "contract": "contracts/Egg.sol:Egg",
        "label": "holder",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}